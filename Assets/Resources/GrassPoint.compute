#pragma kernel InitializeGrass

struct GrassData {
    float4 position;
    float2 uv;
    float displacement;
};

RWStructuredBuffer<GrassData> _GrassDataBuffer;
Texture2D<float4> _HeightMap;
SamplerState sampler_HeightMap;

int _Dimension, _Scale;
float _DisplacementStrength;

[numthreads(8,8,1)]
void InitializeGrass(uint3 id : SV_DispatchThreadID) {
    if (id.x < uint(_Dimension) && id.y < uint(_Dimension)) {
        GrassData grass;
        float4 pos = 0.0f;

        // Calculate position with one-meter spacing
        pos.x = (id.x - _Dimension / 2) * _Scale;
        pos.z = (id.y - _Dimension / 2) * _Scale;

        float2 uv = float2(id.x / (float)_Dimension, id.y / (float)_Dimension);
        float4 displacement = _HeightMap.SampleLevel(sampler_HeightMap, uv, 0);

        pos.y = displacement.r * _DisplacementStrength;

        grass.position = pos;
        grass.displacement = displacement.r * _DisplacementStrength;
        grass.uv = uv;

        _GrassDataBuffer[id.x + id.y * _Dimension] = grass;
    }
}
