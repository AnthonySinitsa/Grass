#pragma kernel CSMain
#include "Random.cginc"

struct GrassBlade
{
    float3 position;
};

RWStructuredBuffer<GrassBlade> grassBuffer;

int chunkSize;
int grassDensity;

[numthreads(10, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= grassDensity) return;

    GrassBlade blade;

    // Initialize the random number generator with a unique seed for each thread
    float randomOffsetX = randValue(id.x);
    float randomOffsetZ = randValue(id.x + 1);

    // Place blade within chunk with jitter
    float3 position = float3((id.x % chunkSize) + randomOffsetX, 0, (id.x / chunkSize) + randomOffsetZ);
    blade.position = position;

    grassBuffer[id.x] = blade;
}
